plugins {
	id 'maven-publish'
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id "com.modrinth.minotaur" version "2.+"
}

version = project.version
group = project.maven_group

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${minecraft_version}+build.${yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

	include(implementation "blue.endless:jankson:${jankson}")

	include(implementation "org.mariuszgromada.math:MathParser.org-mXparser:${mxparser}")

	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}+${minecraft_version}"
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = System.getenv("projectid")
	versionName = "[FABRIC]" + project.name + "-${version}+${minecraft_version}"
	versionType = "alpha"
	uploadFile = remapJar
	gameVersions = ["${minecraft_version}"]
	changelog = project.file("CHANGELOG.md").text
	dependencies {
		required.project "fabric-api"
	}
}
